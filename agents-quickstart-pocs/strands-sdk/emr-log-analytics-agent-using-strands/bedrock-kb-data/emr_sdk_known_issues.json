{"id":"emrsdk-1001","summary":"S3 Throttling Detected in EMRFS","description":"The error code 500 Internal Error indicates that Amazon S3 could not handle the request at that time. The error code 503 Slow Down typically indicates that the number of requests to your Amazon S3 bucket is high. For example, you can send 3,500 PUT/COPY/POST/DELETE or 5,500 GET/HEAD requests per second per prefix to an Amazon S3 bucket. However, Amazon S3 can return a 503 Slow Down response if your requests exceed the amount of bandwidth that's available for cross-region copying. We recommend modifying the retry strategy for Amazon S3 requests. The 'fs.s3.maxRetries' controls the retry limit for the default exponential back-off retry strategy. AIMD retry strategy can be used from EMR 6.4.0 and later.","keywords":["com.amazon.ws.emr.hadoop.fs.shaded.com.amazonaws.services.s3.model.AmazonS3Exception","503 Slow Down","500 Internal Error"],"knowledge_center_links":["https://repost.aws/knowledge-center/emr-s3-503-slow-down","https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-spark-emrfs-retry.html","https://repost.aws/knowledge-center/http-5xx-errors-s3"]}
{"id":"emrsdk-1002","summary":"SdkClientException Detected","description":"This exception is thrown by the SDK (emrfs), when the service could not be contacted for a response, or when the client is unable to parse the response from the service. Check the error message to understand the underlying cause of this exception. Exceptions could also occur due to various other issues in the environment like network (failed to connect to service endpoint), DNS (unable to execute HTTP request), etc.","keywords":["com.amazon.ws.emr.hadoop.fs.shaded.com.amazonaws.SdkClientException"],"knowledge_center_links":[""]}
{"id":"emrsdk-1003","summary":"EMRFS ConsistencyException Detected","description":"This error is thrown when EMRFS Consistent View is enabled (fs.s3.consistent) on the EMR cluster. For every Amazon S3 operation, EMRFS checks the metadata for information about the set of objects in consistent view. If EMRFS finds that Amazon S3 is inconsistent during one of these operations, it retries the operation according to parameters defined in the emrfs-site configuration properties. After EMRFS exhausts the retries, it either throws 'ConsistencyException' or logs the exception. However, with the release of Amazon S3 strong read-after-write consistency on December 1, 2020, you no longer need to use EMRFS consistent view (EMRFS CV) in your Amazon EMR clusters.","keywords":["com.amazon.ws.emr.hadoop.fs.consistency.exception.ConsistencyException"],"knowledge_center_links":["https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-plan-consistent-view.html"]}
{"id":"emrsdk-1004","summary":"MultiObjectDeleteException Detected","description":"This error can occur when any of the keys in the POST request fails to delete and internally throws an error. The recommended practice would be to retry the full request. Newer versions of EMRFS on EMR release labels on/above EMR 6.16 will have the necessary logic to handle these retries (configurable via fs.s3.delete.retryCount). We recommend to upgrade to a newer EMR version or reach out to AWS Support.","keywords":["com.amazon.ws.emr.hadoop.fs.shaded.com.amazonaws.services.s3.model.MultiObjectDeleteException","One or more objects could not be deleted","Status Code: 200"],"knowledge_center_links":[""]}
{"id":"emrsdk-1005","summary":"AbortedException Detected","description":"AbortedException is generally thrown when the SDK handles an InterruptedException (example: the thread was signaled to stop doing work). Check the stack trace to understand the cause of this issue. Verify if the corresponding JVM was killed by OOM.","keywords":["com.amazon.ws.emr.hadoop.fs.shaded.com.amazonaws.AbortedException","com.amazon.ws.emr.hadoop.fs.shaded.com.amazonaws.http.timers.client.SdkInterruptedException"],"knowledge_center_links":[""]}
{"id":"emrsdk-1006","summary":"ProvisionException Detected in EMRFS","description":"This message is typically seen when EMRFS consistency view is enabled on EMR. See the Caused by to understand the root cause. We recommend disabling consistent view as it is no longer needed by EMR. In the emrfs-site.xml, if parameters are not supported or set improperly, it will raise this misleading error without any useful information. Disable each EMRFS parameter one by one in the emrfs-site.xml file and check which parameter is causing this issue.","keywords":["com.amazon.ws.emr.hadoop.fs.shaded.com.google.inject.ProvisionException.getMessage","ArrayIndexOutOfBoundsException"],"knowledge_center_links":["https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-plan-consistent-view.html"]}
{"id":"emrsdk-1007","summary":"AWSSecurityTokenServiceException Detected","description":"This is a base exception for all service exceptions thrown by AWS Security Token Service (STS) when EMRFS is making a call to Amazon S3. Check the relevant message followed by this exception in the logs to understand the root cause. Check relevant IAM permissions of the IAM role/user making this call.","keywords":["com.amazon.ws.emr.hadoop.fs.shaded.com.amazonaws.services.securitytoken.model.AWSSecurityTokenServiceException"],"knowledge_center_links":[""]}
{"id":"emrsdk-1008","summary":"RetriableEntityStoreException Detected in EMRFS Consistent View","description":"This error is thrown when EMRFS Consistent View is enabled (fs.s3.consistent) in the EMR cluster. In this case, EMRFS uses Amazon DynamoDB to store metadata. If Amazon DynamoDB is throttled or if there is any issue accessing Amazon DynamoDB, this exception is usually observed. With the release of Amazon S3 strong read-after-write consistency on December 1, 2020, you no longer need to use EMRFS consistent view (EMRFS CV) in your Amazon EMR clusters.","keywords":["com.amazon.ws.emr.hadoop.fs.dynamodb.impl.exception.RetriableEntityStoreException"],"knowledge_center_links":["https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-plan-consistent-view.html"]}
{"id":"emrsdk-1009","summary":"AmazonDynamoDBException Detected in EMRFS Consistent View","description":"This error is thrown when EMRFS Consistent View is enabled (fs.s3.consistent) in the EMR cluster. In this case, EMRFS uses Amazon DynamoDB to store metadata. If there are any issues when making Amazon DynamoDB API calls, this exception is usually observed. With the release of Amazon S3 strong read-after-write consistency on December 1, 2020, you no longer need to use EMRFS consistent view (EMRFS CV) in your Amazon EMR clusters.","keywords":["com.amazon.ws.emr.hadoop.fs.shaded.com.amazonaws.services.dynamodbv2.model.AmazonDynamoDBException"],"knowledge_center_links":[""]}
{"id":"emrsdk-1010","summary":"ProvisionedThroughputExceededException in EMRFS Consistent View","description":"This error is thrown when EMRFS Consistent View is enabled (fs.s3.consistent) in the EMR cluster. In this case, EMRFS uses Amazon DynamoDB to store metadata. If there are ProvisionedThroughputExceeded issues when making Amazon DynamoDB API calls, this exception is usually observed. With the release of Amazon S3 strong read-after-write consistency on December 1, 2020, you no longer need to use EMRFS consistent view (EMRFS CV) in your Amazon EMR clusters.","keywords":["com.amazon.ws.emr.hadoop.fs.shaded.com.amazonaws.services.dynamodbv2.model.ProvisionedThroughputExceededException"],"knowledge_center_links":["https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-plan-consistent-view.html"]}
{"id":"emrsdk-1011","summary":"HttpHostConnectException Detected in EMRFS","description":"This exception happens when there is a connection timed out to a host. Check the host logs and see if the relevant JVM is listening on the relevant port got restarted or if it is still running.","keywords":["com.amazon.ws.emr.hadoop.fs.shaded.org.apache.http.conn.HttpHostConnectException"],"knowledge_center_links":[""]}
{"id":"emrsdk-1012","summary":"EntityStoreException detected in EMRFS","description":"This error is thrown when EMRFS Consistent View is enabled (fs.s3.consistent) on the EMR cluster and when EMRFS is trying to access metadata on Amazon DynamoDB, this exception can be seen. Check if the Amazon DynamoDB table exists and has the correct schema. With the release of Amazon S3 strong read-after-write consistency on December 1, 2020, you no longer need to use EMRFS consistent view (EMRFS CV) in your Amazon EMR clusters.","keywords":["com.amazon.ws.emr.hadoop.fs.dynamodb.impl.exception.EntityStoreException"],"knowledge_center_links":["https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-plan-consistent-view.html"]}
{"id":"emrsdk-1013","summary":"FileDeletedInMetadataNotFoundException Detected","description":"This error is thrown when EMRFS Consistent View is enabled (fs.s3.consistent) on the EMR cluster and when the metadata entry in Amazon DynamoDB is not found. This is typically seen when using s3distcp. With the release of Amazon S3 strong read-after-write consistency on December 1, 2020, you no longer need to use EMRFS consistent view (EMRFS CV) in your Amazon EMR clusters.","keywords":["com.amazon.ws.emr.hadoop.fs.consistency.exception.FileDeletedInMetadataNotFoundException"],"knowledge_center_links":["https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-plan-consistent-view.html"]}
{"id":"emrsdk-1014","summary":"ConnectTimeoutException Detected","description":"This exception happens when there is a connection timed out to a host. Check the host logs and see if the relevant JVM listening on the relevant port got restarted or if it is still running.","keywords":["com.amazon.ws.emr.hadoop.fs.shaded.org.apache.http.conn.ConnectTimeoutException"],"knowledge_center_links":[""]}
{"id":"emrsdk-1015","summary":"InternalServerErrorException Detected in EMRFS Consistent View","description":"This error is thrown when EMRFS Consistent View is enabled (fs.s3.consistent) in the EMR cluster and when Amazon DynamoDB is returning 5xx errors. 5xx errors are common due to the distributed nature of Amazon DynamoDB. However, if you have noticed a significant rise in the number of errors, please reach out to AWS support. With the release of Amazon S3 strong read-after-write consistency on December 1, 2020, you no longer need to use EMRFS consistent view (EMRFS CV) in your Amazon EMR clusters.","keywords":["com.amazon.ws.emr.hadoop.fs.shaded.com.amazonaws.services.dynamodbv2.model.InternalServerErrorException"],"knowledge_center_links":["https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-plan-consistent-view.html"]}
{"id":"emrsdk-1016","summary":"ConnectionPoolTimeoutException Detected in EMRFS","description":"The error usually means that a request cannot get a connection from the pool within the specified maximum time. This can be due to a high request rate. Consider taking any of the following actions to mitigate the issue: increase max connections, increase acquire timeout, or slowing the request rate. If the above mechanisms are not able to fix the issue, try smoothing out your requests so that large traffic bursts cannot overload the client, being more efficient with the number of times you need to call AWS, or by increasing the number of hosts sending requests. From the EMR perspective, increasing the EMRFS Config 'fs.s3.maxConnections' may help. Enabling DEBUG on the PoolingHttpClientConnectionManager class may be required to monitor connections.","keywords":["com.amazon.ws.emr.hadoop.fs.shaded.org.apache.http.conn.ConnectionPoolTimeoutException","Timeout waiting for connection from pool"],"knowledge_center_links":[""]}
{"id":"emrsdk-1017","summary":"NoHttpResponseException Detected in EMRFS","description":"This error indicates the SDK tried to establish a connection to the Amazon S3 endpoint but was not able to. It can be caused by network connectivity issues such as high latency. The EmrFs library on/after EMR 6.14 exposes the configuration setting 'fs.s3.connection.maxIdleMilliSeconds' to define the maximum time in milliseconds an open connection will be allowed to live. The recommendation is to set the value to 5 seconds: fs.s3.connection.maxIdleMilliSeconds=5000. From the Java docs: setConnectionMaxIdleMillis(long connectionMaxIdleMillis) - Sets the maximum amount of time that an idle connection may sit in the connection pool and still be eligible for reuse.","keywords":["com.amazon.ws.emr.hadoop.fs.shaded.org.apache.http.NoHttpResponseException","The target server failed to respond"],"knowledge_center_links":[""]}
{"id":"emrsdk-1018","summary":"ResourceNotFoundException is detected in EMRFS Consistent View","description":"This error is thrown when EMRFS Consistent View is enabled (fs.s3.consistent) in the EMR cluster and when the Amazon DynamoDB table is not present. With the release of Amazon S3 strong read-after-write consistency on December 1, 2020, you no longer need to use EMRFS consistent view (EMRFS CV) in your Amazon EMR clusters.","keywords":["com.amazon.ws.emr.hadoop.fs.shaded.com.amazonaws.services.dynamodbv2.model.ResourceNotFoundException"],"knowledge_center_links":[""]}
{"id":"emrsdk-1019","summary":"AWSKMSException Detected in EMRFS","description":"This error indicates that the Amazon S3 objects that EMRFS is trying to access are encrypted using AWS Key Management Service (KMS). Check the Amazon S3 bucket/object permissions and relevant KMS policies using the AWS Console ('Key Users').","keywords":["com.amazon.ws.emr.hadoop.fs.shaded.com.amazonaws.services.kms.model.AWSKMSException"],"knowledge_center_links":[""]}
{"id":"emrsdk-1020","summary":"SecretAgentClientException Detected","description":"This error indicates that EMRFS failed to retrieve credentials from the EMR secret agent for the Amazon S3 request. Check the 'emrsecretagent' configuration and logs. If you are using AWS Lake Formation, check the 'GetDataAccess' API call in CloudTrail and explore the permissions.","keywords":["com.amazon.ws.emr.hadoop.fs.shaded.com.amazonaws.emr.secretagent.client.model.SecretAgentClientException"],"knowledge_center_links":[""]}
{"id":"emrsdk-1021","summary":"FileDirectoryMismatchException detected in EMRFS Consistent View","description":"This error is thrown when EMRFS Consistent View is enabled (fs.s3.consistent) in the EMR cluster. This error usually happens when a particular Amazon S3 key is marked as a directory in the metadata but it is actually an object. With the release of Amazon S3 strong read-after-write consistency on December 1, 2020, you no longer need to use EMRFS consistent view (EMRFS CV) in your Amazon EMR clusters.","keywords":["com.amazon.ws.emr.hadoop.fs.consistency.FileDirectoryMismatchException"],"knowledge_center_links":[""]}