"use strict";
/**
 * Investment Idea model with comprehensive validation, versioning, and tracking
 */
Object.defineProperty(exports, "__esModule", { value: true });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW52ZXN0bWVudC1pZGVhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL21vZGVscy9pbnZlc3RtZW50LWlkZWEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOztHQUVHIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBJbnZlc3RtZW50IElkZWEgbW9kZWwgd2l0aCBjb21wcmVoZW5zaXZlIHZhbGlkYXRpb24sIHZlcnNpb25pbmcsIGFuZCB0cmFja2luZ1xuICovXG5cbmltcG9ydCB7IEludmVzdG1lbnQgfSBmcm9tICcuL2ludmVzdG1lbnQnO1xuaW1wb3J0IHsgRGF0YVBvaW50IH0gZnJvbSAnLi9hbmFseXNpcyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSW52ZXN0bWVudElkZWEge1xuICBpZDogc3RyaW5nO1xuICB2ZXJzaW9uOiBudW1iZXI7XG4gIHRpdGxlOiBzdHJpbmc7XG4gIGRlc2NyaXB0aW9uOiBzdHJpbmc7XG4gIGludmVzdG1lbnRzOiBJbnZlc3RtZW50W107XG4gIHJhdGlvbmFsZTogc3RyaW5nO1xuICBzdHJhdGVneTogSW52ZXN0bWVudFN0cmF0ZWd5O1xuICB0aW1lSG9yaXpvbjogVGltZUhvcml6b247XG4gIGNvbmZpZGVuY2VTY29yZTogbnVtYmVyO1xuICBnZW5lcmF0ZWRBdDogRGF0ZTtcbiAgZXhwaXJlc0F0PzogRGF0ZTtcbiAgbGFzdFVwZGF0ZWRBdDogRGF0ZTtcbiAgcG90ZW50aWFsT3V0Y29tZXM6IE91dGNvbWVbXTtcbiAgc3VwcG9ydGluZ0RhdGE6IERhdGFQb2ludFtdO1xuICBjb3VudGVyQXJndW1lbnRzOiBDb3VudGVyQXJndW1lbnRbXTtcbiAgY29tcGxpYW5jZVN0YXR1czogQ29tcGxpYW5jZVJlc3VsdDtcbiAgY3JlYXRlZEJ5OiBzdHJpbmc7IC8vIE1vZGVsIElEIG9yIGFnZW50IGlkZW50aWZpZXJcbiAgdGFnczogc3RyaW5nW107XG4gIGNhdGVnb3J5OiBJbnZlc3RtZW50Q2F0ZWdvcnk7XG4gIHJpc2tMZXZlbDogUmlza0xldmVsO1xuICB0YXJnZXRBdWRpZW5jZTogVGFyZ2V0QXVkaWVuY2VbXTtcbiAgbWV0YWRhdGE6IEludmVzdG1lbnRJZGVhTWV0YWRhdGE7XG4gIHRyYWNraW5nSW5mbzogVHJhY2tpbmdJbmZvO1xufVxuXG5leHBvcnQgdHlwZSBJbnZlc3RtZW50U3RyYXRlZ3kgPSBcbiAgfCAnYnV5JyBcbiAgfCAnc2VsbCcgXG4gIHwgJ2hvbGQnIFxuICB8ICdzaG9ydCcgXG4gIHwgJ2xvbmcnIFxuICB8ICdoZWRnZScgXG4gIHwgJ2FyYml0cmFnZScgXG4gIHwgJ3BhaXJzLXRyYWRlJyBcbiAgfCAnbW9tZW50dW0nIFxuICB8ICd2YWx1ZScgXG4gIHwgJ2dyb3d0aCcgXG4gIHwgJ2luY29tZScgXG4gIHwgJ2NvbXBsZXgnO1xuXG5leHBvcnQgdHlwZSBUaW1lSG9yaXpvbiA9IFxuICB8ICdpbnRyYWRheScgXG4gIHwgJ3Nob3J0JyBcbiAgfCAnbWVkaXVtJyBcbiAgfCAnbG9uZycgXG4gIHwgJ3ZlcnktbG9uZyc7XG5cbmV4cG9ydCB0eXBlIEludmVzdG1lbnRDYXRlZ29yeSA9IFxuICB8ICdlcXVpdHknIFxuICB8ICdmaXhlZC1pbmNvbWUnIFxuICB8ICdjb21tb2RpdHknIFxuICB8ICdjdXJyZW5jeScgXG4gIHwgJ2FsdGVybmF0aXZlJyBcbiAgfCAnbWl4ZWQnIFxuICB8ICd0aGVtYXRpYycgXG4gIHwgJ3NlY3Rvci1yb3RhdGlvbicgXG4gIHwgJ21hY3JvJztcblxuZXhwb3J0IHR5cGUgUmlza0xldmVsID0gXG4gIHwgJ3ZlcnktbG93JyBcbiAgfCAnbG93JyBcbiAgfCAnbW9kZXJhdGUnIFxuICB8ICdoaWdoJyBcbiAgfCAndmVyeS1oaWdoJztcblxuZXhwb3J0IHR5cGUgVGFyZ2V0QXVkaWVuY2UgPSBcbiAgfCAncmV0YWlsJyBcbiAgfCAnaW5zdGl0dXRpb25hbCcgXG4gIHwgJ2hpZ2gtbmV0LXdvcnRoJyBcbiAgfCAncGVuc2lvbi1mdW5kJyBcbiAgfCAnaGVkZ2UtZnVuZCcgXG4gIHwgJ2ZhbWlseS1vZmZpY2UnO1xuXG5leHBvcnQgaW50ZXJmYWNlIE91dGNvbWUge1xuICBzY2VuYXJpbzogJ2Jlc3QnIHwgJ2V4cGVjdGVkJyB8ICd3b3JzdCc7XG4gIHByb2JhYmlsaXR5OiBudW1iZXI7XG4gIHJldHVybkVzdGltYXRlOiBudW1iZXI7XG4gIHRpbWVUb1JlYWxpemF0aW9uOiBudW1iZXI7IC8vIGluIGRheXNcbiAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgY29uZGl0aW9uczogc3RyaW5nW107XG4gIGtleVJpc2tzOiBzdHJpbmdbXTtcbiAgY2F0YWx5c3RzOiBzdHJpbmdbXTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDb3VudGVyQXJndW1lbnQge1xuICBkZXNjcmlwdGlvbjogc3RyaW5nO1xuICBzdHJlbmd0aDogJ3dlYWsnIHwgJ21vZGVyYXRlJyB8ICdzdHJvbmcnO1xuICBpbXBhY3Q6ICdsb3cnIHwgJ21lZGl1bScgfCAnaGlnaCc7XG4gIG1pdGlnYXRpb25TdHJhdGVneT86IHN0cmluZztcbiAgcHJvYmFiaWxpdHk6IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDb21wbGlhbmNlUmVzdWx0IHtcbiAgY29tcGxpYW50OiBib29sZWFuO1xuICBpc3N1ZXM6IENvbXBsaWFuY2VJc3N1ZVtdO1xuICByZWd1bGF0aW9uc0NoZWNrZWQ6IHN0cmluZ1tdO1xuICB0aW1lc3RhbXA6IERhdGU7XG4gIHJldmlld2VkQnk/OiBzdHJpbmc7XG4gIG5leHRSZXZpZXdEYXRlPzogRGF0ZTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDb21wbGlhbmNlSXNzdWUge1xuICBzZXZlcml0eTogJ2luZm8nIHwgJ3dhcm5pbmcnIHwgJ2NyaXRpY2FsJztcbiAgcmVndWxhdGlvbjogc3RyaW5nO1xuICBkZXNjcmlwdGlvbjogc3RyaW5nO1xuICByZW1lZGlhdGlvbj86IHN0cmluZztcbiAgZXN0aW1hdGVkSW1wYWN0OiAnbG93JyB8ICdtZWRpdW0nIHwgJ2hpZ2gnO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEludmVzdG1lbnRJZGVhTWV0YWRhdGEge1xuICBzb3VyY2VNb2RlbHM6IHN0cmluZ1tdO1xuICBwcm9jZXNzaW5nVGltZTogbnVtYmVyOyAvLyBpbiBtaWxsaXNlY29uZHNcbiAgZGF0YVNvdXJjZXNVc2VkOiBzdHJpbmdbXTtcbiAgcmVzZWFyY2hEZXB0aDogJ2Jhc2ljJyB8ICdzdGFuZGFyZCcgfCAnY29tcHJlaGVuc2l2ZSc7XG4gIHF1YWxpdHlTY29yZTogbnVtYmVyOyAvLyAwLTEwMFxuICBub3ZlbHR5U2NvcmU6IG51bWJlcjsgLy8gMC0xMDBcbiAgbWFya2V0Q29uZGl0aW9uc0F0R2VuZXJhdGlvbjogTWFya2V0Q29uZGl0aW9ucztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBNYXJrZXRDb25kaXRpb25zIHtcbiAgdm9sYXRpbGl0eUluZGV4OiBudW1iZXI7XG4gIG1hcmtldFRyZW5kOiAnYnVsbCcgfCAnYmVhcicgfCAnc2lkZXdheXMnO1xuICBlY29ub21pY0luZGljYXRvcnM6IFJlY29yZDxzdHJpbmcsIG51bWJlcj47XG4gIGdlb3BvbGl0aWNhbFJpc2s6ICdsb3cnIHwgJ21lZGl1bScgfCAnaGlnaCc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVHJhY2tpbmdJbmZvIHtcbiAgdmlld3M6IG51bWJlcjtcbiAgaW1wbGVtZW50YXRpb25zOiBudW1iZXI7XG4gIGZlZWRiYWNrOiBGZWVkYmFja0VudHJ5W107XG4gIHBlcmZvcm1hbmNlOiBQZXJmb3JtYW5jZVRyYWNraW5nW107XG4gIHN0YXR1czogSWRlYVN0YXR1cztcbiAgc3RhdHVzSGlzdG9yeTogU3RhdHVzSGlzdG9yeUVudHJ5W107XG59XG5cbmV4cG9ydCB0eXBlIElkZWFTdGF0dXMgPSBcbiAgfCAnYWN0aXZlJyBcbiAgfCAnaW1wbGVtZW50ZWQnIFxuICB8ICdleHBpcmVkJyBcbiAgfCAnaW52YWxpZGF0ZWQnIFxuICB8ICd1bmRlci1yZXZpZXcnIFxuICB8ICdhcmNoaXZlZCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRmVlZGJhY2tFbnRyeSB7XG4gIGlkOiBzdHJpbmc7XG4gIHVzZXJJZDogc3RyaW5nO1xuICByYXRpbmc6IG51bWJlcjsgLy8gMS01XG4gIGNvbW1lbnQ/OiBzdHJpbmc7XG4gIHRpbWVzdGFtcDogRGF0ZTtcbiAgZmVlZGJhY2tUeXBlOiAncXVhbGl0eScgfCAnYWNjdXJhY3knIHwgJ3VzZWZ1bG5lc3MnIHwgJ2NsYXJpdHknO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFBlcmZvcm1hbmNlVHJhY2tpbmcge1xuICBkYXRlOiBEYXRlO1xuICBhY3R1YWxSZXR1cm46IG51bWJlcjtcbiAgZXhwZWN0ZWRSZXR1cm46IG51bWJlcjtcbiAgdmFyaWFuY2U6IG51bWJlcjtcbiAgbm90ZXM/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RhdHVzSGlzdG9yeUVudHJ5IHtcbiAgc3RhdHVzOiBJZGVhU3RhdHVzO1xuICB0aW1lc3RhbXA6IERhdGU7XG4gIHJlYXNvbj86IHN0cmluZztcbiAgY2hhbmdlZEJ5OiBzdHJpbmc7XG59XG5cbi8vIFZhbGlkYXRpb24gaW50ZXJmYWNlcyBhbmQgdHlwZXNcbmV4cG9ydCBpbnRlcmZhY2UgVmFsaWRhdGlvblJlc3VsdCB7XG4gIGlzVmFsaWQ6IGJvb2xlYW47XG4gIGVycm9yczogVmFsaWRhdGlvbkVycm9yW107XG4gIHdhcm5pbmdzOiBWYWxpZGF0aW9uV2FybmluZ1tdO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFZhbGlkYXRpb25FcnJvciB7XG4gIGZpZWxkOiBzdHJpbmc7XG4gIG1lc3NhZ2U6IHN0cmluZztcbiAgY29kZTogc3RyaW5nO1xuICBzZXZlcml0eTogJ2Vycm9yJyB8ICdjcml0aWNhbCc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVmFsaWRhdGlvbldhcm5pbmcge1xuICBmaWVsZDogc3RyaW5nO1xuICBtZXNzYWdlOiBzdHJpbmc7XG4gIGNvZGU6IHN0cmluZztcbiAgcmVjb21tZW5kYXRpb24/OiBzdHJpbmc7XG59XG5cbi8vIFZlcnNpb24gY29udHJvbCBpbnRlcmZhY2VzXG5leHBvcnQgaW50ZXJmYWNlIEludmVzdG1lbnRJZGVhVmVyc2lvbiB7XG4gIHZlcnNpb246IG51bWJlcjtcbiAgdGltZXN0YW1wOiBEYXRlO1xuICBjaGFuZ2VzOiBWZXJzaW9uQ2hhbmdlW107XG4gIGNoYW5nZWRCeTogc3RyaW5nO1xuICByZWFzb24/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVmVyc2lvbkNoYW5nZSB7XG4gIGZpZWxkOiBzdHJpbmc7XG4gIG9sZFZhbHVlOiBhbnk7XG4gIG5ld1ZhbHVlOiBhbnk7XG4gIGNoYW5nZVR5cGU6ICdhZGRlZCcgfCAnbW9kaWZpZWQnIHwgJ3JlbW92ZWQnO1xufVxuXG4vLyBDcmVhdGlvbiBhbmQgdXBkYXRlIHJlcXVlc3QgaW50ZXJmYWNlc1xuZXhwb3J0IGludGVyZmFjZSBDcmVhdGVJbnZlc3RtZW50SWRlYVJlcXVlc3Qge1xuICB0aXRsZTogc3RyaW5nO1xuICBkZXNjcmlwdGlvbjogc3RyaW5nO1xuICBpbnZlc3RtZW50czogSW52ZXN0bWVudFtdO1xuICByYXRpb25hbGU6IHN0cmluZztcbiAgc3RyYXRlZ3k6IEludmVzdG1lbnRTdHJhdGVneTtcbiAgdGltZUhvcml6b246IFRpbWVIb3Jpem9uO1xuICBjb25maWRlbmNlU2NvcmU6IG51bWJlcjtcbiAgZXhwaXJlc0F0PzogRGF0ZTtcbiAgcG90ZW50aWFsT3V0Y29tZXM6IE91dGNvbWVbXTtcbiAgc3VwcG9ydGluZ0RhdGE6IERhdGFQb2ludFtdO1xuICBjb3VudGVyQXJndW1lbnRzOiBDb3VudGVyQXJndW1lbnRbXTtcbiAgdGFncz86IHN0cmluZ1tdO1xuICBjYXRlZ29yeTogSW52ZXN0bWVudENhdGVnb3J5O1xuICByaXNrTGV2ZWw6IFJpc2tMZXZlbDtcbiAgdGFyZ2V0QXVkaWVuY2U6IFRhcmdldEF1ZGllbmNlW107XG4gIGNyZWF0ZWRCeTogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFVwZGF0ZUludmVzdG1lbnRJZGVhUmVxdWVzdCB7XG4gIGlkOiBzdHJpbmc7XG4gIHRpdGxlPzogc3RyaW5nO1xuICBkZXNjcmlwdGlvbj86IHN0cmluZztcbiAgcmF0aW9uYWxlPzogc3RyaW5nO1xuICBjb25maWRlbmNlU2NvcmU/OiBudW1iZXI7XG4gIGV4cGlyZXNBdD86IERhdGU7XG4gIHBvdGVudGlhbE91dGNvbWVzPzogT3V0Y29tZVtdO1xuICBjb3VudGVyQXJndW1lbnRzPzogQ291bnRlckFyZ3VtZW50W107XG4gIHRhZ3M/OiBzdHJpbmdbXTtcbiAgcmlza0xldmVsPzogUmlza0xldmVsO1xuICB0YXJnZXRBdWRpZW5jZT86IFRhcmdldEF1ZGllbmNlW107XG4gIHVwZGF0ZWRCeTogc3RyaW5nO1xuICByZWFzb24/OiBzdHJpbmc7XG59Il19