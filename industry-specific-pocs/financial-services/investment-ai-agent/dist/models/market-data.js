"use strict";
/**
 * Market data models for real-time market data integration
 */
Object.defineProperty(exports, "__esModule", { value: true });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFya2V0LWRhdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbW9kZWxzL21hcmtldC1kYXRhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7R0FFRyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTWFya2V0IGRhdGEgbW9kZWxzIGZvciByZWFsLXRpbWUgbWFya2V0IGRhdGEgaW50ZWdyYXRpb25cbiAqL1xuXG4vKipcbiAqIE1hcmtldCBkYXRhIGZlZWQgY29uZmlndXJhdGlvblxuICovXG5leHBvcnQgaW50ZXJmYWNlIE1hcmtldERhdGFGZWVkQ29uZmlnIHtcbiAgcHJvdmlkZXI6IHN0cmluZztcbiAgYXBpS2V5Pzogc3RyaW5nO1xuICBkYXRhVHlwZXM6IE1hcmtldERhdGFUeXBlW107XG4gIHN5bWJvbHM6IHN0cmluZ1tdO1xuICBpbnRlcnZhbDogTWFya2V0RGF0YUludGVydmFsO1xuICBtYXhIaXN0b3JpY2FsRGF5cz86IG51bWJlcjtcbiAgcmVmcmVzaEludGVydmFsPzogbnVtYmVyOyAvLyBpbiBtaWxsaXNlY29uZHNcbn1cblxuLyoqXG4gKiBNYXJrZXQgZGF0YSB0eXBlc1xuICovXG5leHBvcnQgdHlwZSBNYXJrZXREYXRhVHlwZSA9IFxuICB8ICdwcmljZSdcbiAgfCAndm9sdW1lJ1xuICB8ICdvcmRlci1ib29rJ1xuICB8ICd0ZWNobmljYWwtaW5kaWNhdG9ycydcbiAgfCAnbmV3cy1zZW50aW1lbnQnXG4gIHwgJ2Vjb25vbWljLWluZGljYXRvcnMnXG4gIHwgJ3ZvbGF0aWxpdHktbWV0cmljcydcbiAgfCAnb3B0aW9ucy1kYXRhJ1xuICB8ICdmdXR1cmVzLWRhdGEnXG4gIHwgJ2ZvcmV4LWRhdGEnO1xuXG4vKipcbiAqIE1hcmtldCBkYXRhIGludGVydmFsc1xuICovXG5leHBvcnQgdHlwZSBNYXJrZXREYXRhSW50ZXJ2YWwgPSBcbiAgfCAndGljaydcbiAgfCAnMW1pbidcbiAgfCAnNW1pbidcbiAgfCAnMTVtaW4nXG4gIHwgJzMwbWluJ1xuICB8ICcxaG91cidcbiAgfCAnNGhvdXInXG4gIHwgJ2RhaWx5J1xuICB8ICd3ZWVrbHknXG4gIHwgJ21vbnRobHknO1xuXG4vKipcbiAqIE1hcmtldCBkYXRhIHBvaW50XG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTWFya2V0RGF0YVBvaW50IHtcbiAgaWQ6IHN0cmluZztcbiAgc3ltYm9sOiBzdHJpbmc7XG4gIGRhdGFUeXBlOiBNYXJrZXREYXRhVHlwZTtcbiAgdGltZXN0YW1wOiBEYXRlO1xuICB2YWx1ZTogYW55O1xuICBzb3VyY2U6IHN0cmluZztcbiAgaW50ZXJ2YWw6IE1hcmtldERhdGFJbnRlcnZhbDtcbiAgbWV0YWRhdGE/OiBSZWNvcmQ8c3RyaW5nLCBhbnk+O1xufVxuXG4vKipcbiAqIFByaWNlIGRhdGFcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBQcmljZURhdGEge1xuICBvcGVuOiBudW1iZXI7XG4gIGhpZ2g6IG51bWJlcjtcbiAgbG93OiBudW1iZXI7XG4gIGNsb3NlOiBudW1iZXI7XG4gIHZvbHVtZTogbnVtYmVyO1xuICBhZGp1c3RlZENsb3NlPzogbnVtYmVyO1xufVxuXG4vKipcbiAqIE9yZGVyIGJvb2sgZGF0YVxuICovXG5leHBvcnQgaW50ZXJmYWNlIE9yZGVyQm9va0RhdGEge1xuICBiaWRzOiBBcnJheTxbbnVtYmVyLCBudW1iZXJdPjsgLy8gcHJpY2UsIHF1YW50aXR5XG4gIGFza3M6IEFycmF5PFtudW1iZXIsIG51bWJlcl0+OyAvLyBwcmljZSwgcXVhbnRpdHlcbiAgc3ByZWFkOiBudW1iZXI7XG4gIGRlcHRoOiBudW1iZXI7XG59XG5cbi8qKlxuICogVGVjaG5pY2FsIGluZGljYXRvciBkYXRhXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgVGVjaG5pY2FsSW5kaWNhdG9yRGF0YSB7XG4gIGluZGljYXRvcjogc3RyaW5nO1xuICB2YWx1ZTogbnVtYmVyO1xuICBwYXJhbWV0ZXJzOiBSZWNvcmQ8c3RyaW5nLCBhbnk+O1xufVxuXG4vKipcbiAqIE5ld3Mgc2VudGltZW50IGRhdGFcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBOZXdzU2VudGltZW50RGF0YSB7XG4gIHNlbnRpbWVudDogJ3ZlcnktbmVnYXRpdmUnIHwgJ25lZ2F0aXZlJyB8ICduZXV0cmFsJyB8ICdwb3NpdGl2ZScgfCAndmVyeS1wb3NpdGl2ZSc7XG4gIHNjb3JlOiBudW1iZXI7IC8vIC0xLjAgdG8gMS4wXG4gIGFydGljbGVDb3VudDogbnVtYmVyO1xuICBzb3VyY2VzOiBzdHJpbmdbXTtcbiAga2V5d29yZHM6IHN0cmluZ1tdO1xufVxuXG4vKipcbiAqIEVjb25vbWljIGluZGljYXRvciBkYXRhXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgRWNvbm9taWNJbmRpY2F0b3JEYXRhIHtcbiAgaW5kaWNhdG9yOiBzdHJpbmc7XG4gIHZhbHVlOiBudW1iZXI7XG4gIHByZXZpb3VzVmFsdWU/OiBudW1iZXI7XG4gIGNoYW5nZT86IG51bWJlcjtcbiAgY2hhbmdlUGVyY2VudD86IG51bWJlcjtcbiAgZm9yZWNhc3Q/OiBudW1iZXI7XG4gIHBlcmlvZDogc3RyaW5nO1xuICBjb3VudHJ5Pzogc3RyaW5nO1xufVxuXG4vKipcbiAqIFZvbGF0aWxpdHkgbWV0cmljcyBkYXRhXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgVm9sYXRpbGl0eURhdGEge1xuICBoaXN0b3JpY2FsVm9sYXRpbGl0eTogbnVtYmVyO1xuICBpbXBsaWVkVm9sYXRpbGl0eT86IG51bWJlcjtcbiAgdml4PzogbnVtYmVyO1xuICBib2xsaW5nZXJCYW5kV2lkdGg/OiBudW1iZXI7XG4gIGF2ZXJhZ2VUcnVlUmFuZ2U/OiBudW1iZXI7XG59XG5cbi8qKlxuICogTWFya2V0IGFsZXJ0IGNvbmZpZ3VyYXRpb25cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBNYXJrZXRBbGVydENvbmZpZyB7XG4gIGlkOiBzdHJpbmc7XG4gIG5hbWU6IHN0cmluZztcbiAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG4gIHN5bWJvbDogc3RyaW5nO1xuICBkYXRhVHlwZTogTWFya2V0RGF0YVR5cGU7XG4gIGNvbmRpdGlvbjogQWxlcnRDb25kaXRpb247XG4gIHRocmVzaG9sZDogbnVtYmVyO1xuICBjb21wYXJpc29uVmFsdWU/OiAncHJldmlvdXMnIHwgJ21vdmluZy1hdmVyYWdlJyB8ICdmaXhlZCc7XG4gIG1vdmluZ0F2ZXJhZ2VQZXJpb2Q/OiBudW1iZXI7XG4gIGVuYWJsZWQ6IGJvb2xlYW47XG4gIGNvb2xkb3duUGVyaW9kPzogbnVtYmVyOyAvLyBpbiBtaWxsaXNlY29uZHNcbiAgbGFzdFRyaWdnZXJlZD86IERhdGU7XG4gIGNyZWF0ZWRBdDogRGF0ZTtcbiAgdXBkYXRlZEF0OiBEYXRlO1xuICB1c2VySWQ6IHN0cmluZztcbiAgbm90aWZpY2F0aW9uQ2hhbm5lbHM6IE5vdGlmaWNhdGlvbkNoYW5uZWxbXTtcbn1cblxuLyoqXG4gKiBBbGVydCBjb25kaXRpb25cbiAqL1xuZXhwb3J0IHR5cGUgQWxlcnRDb25kaXRpb24gPSBcbiAgfCAnZ3JlYXRlci10aGFuJ1xuICB8ICdsZXNzLXRoYW4nXG4gIHwgJ2VxdWFsLXRvJ1xuICB8ICdwZXJjZW50LWNoYW5nZS11cCdcbiAgfCAncGVyY2VudC1jaGFuZ2UtZG93bidcbiAgfCAnY3Jvc3Nlcy1hYm92ZSdcbiAgfCAnY3Jvc3Nlcy1iZWxvdydcbiAgfCAndm9sdW1lLXNwaWtlJ1xuICB8ICd2b2xhdGlsaXR5LWluY3JlYXNlJ1xuICB8ICdjdXN0b20nO1xuXG4vKipcbiAqIE5vdGlmaWNhdGlvbiBjaGFubmVsXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTm90aWZpY2F0aW9uQ2hhbm5lbCB7XG4gIHR5cGU6ICdlbWFpbCcgfCAnc21zJyB8ICdwdXNoJyB8ICd3ZWJob29rJztcbiAgZGVzdGluYXRpb246IHN0cmluZztcbiAgZW5hYmxlZDogYm9vbGVhbjtcbn1cblxuLyoqXG4gKiBNYXJrZXQgYWxlcnRcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBNYXJrZXRBbGVydCB7XG4gIGlkOiBzdHJpbmc7XG4gIGFsZXJ0Q29uZmlnSWQ6IHN0cmluZztcbiAgc3ltYm9sOiBzdHJpbmc7XG4gIGRhdGFUeXBlOiBNYXJrZXREYXRhVHlwZTtcbiAgY29uZGl0aW9uOiBBbGVydENvbmRpdGlvbjtcbiAgdGhyZXNob2xkOiBudW1iZXI7XG4gIHRyaWdnZXJlZFZhbHVlOiBudW1iZXI7XG4gIGNvbXBhcmlzb25WYWx1ZT86IG51bWJlcjtcbiAgdGltZXN0YW1wOiBEYXRlO1xuICBtZXNzYWdlOiBzdHJpbmc7XG4gIHNldmVyaXR5OiAnaW5mbycgfCAnd2FybmluZycgfCAnY3JpdGljYWwnO1xuICBtZXRhZGF0YT86IFJlY29yZDxzdHJpbmcsIGFueT47XG59XG5cbi8qKlxuICogTWFya2V0IGRhdGEgc3RvcmFnZSBjb25maWd1cmF0aW9uXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTWFya2V0RGF0YVN0b3JhZ2VDb25maWcge1xuICBzdG9yYWdlVHlwZTogJ3RpbWVzdHJlYW0nIHwgJ2R5bmFtb2RiJyB8ICdtZW1vcnknO1xuICByZXRlbnRpb25QZXJpb2Q6IHtcbiAgICBoaWdoUmVzb2x1dGlvbjogbnVtYmVyOyAvLyBpbiBkYXlzXG4gICAgbG93UmVzb2x1dGlvbjogbnVtYmVyOyAvLyBpbiBkYXlzXG4gIH07XG4gIGFnZ3JlZ2F0aW9uSW50ZXJ2YWxzOiBNYXJrZXREYXRhSW50ZXJ2YWxbXTtcbiAgY29tcHJlc3Npb25FbmFibGVkOiBib29sZWFuO1xufVxuXG4vKipcbiAqIE1hcmtldCBkYXRhIHF1ZXJ5XG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTWFya2V0RGF0YVF1ZXJ5IHtcbiAgc3ltYm9sczogc3RyaW5nW107XG4gIGRhdGFUeXBlczogTWFya2V0RGF0YVR5cGVbXTtcbiAgdGltZVJhbmdlOiB7XG4gICAgc3RhcnQ6IERhdGU7XG4gICAgZW5kOiBEYXRlO1xuICB9O1xuICBpbnRlcnZhbD86IE1hcmtldERhdGFJbnRlcnZhbDtcbiAgYWdncmVnYXRpb24/OiAnbm9uZScgfCAnb2hsYycgfCAnYXZnJyB8ICdtaW4nIHwgJ21heCcgfCAnc3VtJztcbiAgbGltaXQ/OiBudW1iZXI7XG59XG5cbi8qKlxuICogTWFya2V0IGRhdGEgcXVlcnkgcmVzdWx0XG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTWFya2V0RGF0YVF1ZXJ5UmVzdWx0IHtcbiAgZGF0YTogTWFya2V0RGF0YVBvaW50W107XG4gIG1ldGFkYXRhOiB7XG4gICAgcXVlcnk6IE1hcmtldERhdGFRdWVyeTtcbiAgICBjb3VudDogbnVtYmVyO1xuICAgIGV4ZWN1dGlvblRpbWU6IG51bWJlcjtcbiAgICBuZXh0VG9rZW4/OiBzdHJpbmc7XG4gIH07XG59XG5cbi8qKlxuICogTWFya2V0IGRhdGEgZmVlZCBzdGF0dXNcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBNYXJrZXREYXRhRmVlZFN0YXR1cyB7XG4gIHByb3ZpZGVyOiBzdHJpbmc7XG4gIGNvbm5lY3RlZDogYm9vbGVhbjtcbiAgY29ubmVjdGlvbklkPzogc3RyaW5nO1xuICBsYXRlbmN5PzogbnVtYmVyOyAvLyBpbiBtaWxsaXNlY29uZHNcbiAgbGFzdFVwZGF0ZWQ6IERhdGU7XG4gIGFjdGl2ZVN5bWJvbHM6IG51bWJlcjtcbiAgYWN0aXZlRGF0YVR5cGVzOiBNYXJrZXREYXRhVHlwZVtdO1xuICBlcnJvcnM/OiBzdHJpbmdbXTtcbiAgdGhyb3R0bGVTdGF0dXM/OiB7XG4gICAgcmVxdWVzdHNQZXJNaW51dGU6IG51bWJlcjtcbiAgICBtYXhSZXF1ZXN0c1Blck1pbnV0ZTogbnVtYmVyO1xuICAgIHRocm90dGxlZDogYm9vbGVhbjtcbiAgfTtcbn1cblxuLyoqXG4gKiBNYXJrZXQgZGF0YSBub3JtYWxpemF0aW9uIG9wdGlvbnNcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBNYXJrZXREYXRhTm9ybWFsaXphdGlvbk9wdGlvbnMge1xuICBhZGp1c3RGb3JTcGxpdHM6IGJvb2xlYW47XG4gIGFkanVzdEZvckRpdmlkZW5kczogYm9vbGVhbjtcbiAgZmlsbEdhcHM6IGJvb2xlYW47XG4gIGZpbGxNZXRob2Q/OiAncHJldmlvdXMnIHwgJ2xpbmVhcicgfCAnemVybyc7XG4gIHRpbWV6b25lOiBzdHJpbmc7XG4gIGN1cnJlbmN5Pzogc3RyaW5nO1xuICBjb252ZXJ0Q3VycmVuY3k/OiBib29sZWFuO1xufVxuXG4vKipcbiAqIE1hcmtldCBkYXRhIG5vcm1hbGl6YXRpb24gcmVzdWx0XG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTWFya2V0RGF0YU5vcm1hbGl6YXRpb25SZXN1bHQge1xuICBvcmlnaW5hbERhdGE6IE1hcmtldERhdGFQb2ludFtdO1xuICBub3JtYWxpemVkRGF0YTogTWFya2V0RGF0YVBvaW50W107XG4gIHRyYW5zZm9ybWF0aW9uczogc3RyaW5nW107XG4gIHdhcm5pbmdzOiBzdHJpbmdbXTtcbn0iXX0=