"use strict";
/**
 * Routes for web search and deep research
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const web_search_controller_1 = require("../controllers/web-search-controller");
const validation_1 = require("../middleware/validation");
const auth_1 = require("../middleware/auth");
// Create router
const router = express_1.default.Router();
// Initialize controller
// In a real application, the API key would be loaded from environment variables or secrets manager
const webSearchController = new web_search_controller_1.WebSearchController('api-key-placeholder', [
    'Bloomberg', 'Reuters', 'Financial Times', 'Wall Street Journal', 'CNBC',
    'Forbes', 'The Economist', 'Morningstar', 'MarketWatch'
]);
// Routes
router.post('/search', auth_1.authenticateUser, validation_1.validateWebSearchRequest, (req, res) => webSearchController.performWebSearch(req, res));
router.post('/research', auth_1.authenticateUser, validation_1.validateDeepResearchRequest, (req, res) => webSearchController.performDeepResearch(req, res));
router.post('/verify-source', auth_1.authenticateUser, (req, res) => webSearchController.verifySource(req, res));
router.post('/track-citations', auth_1.authenticateUser, (req, res) => webSearchController.trackCitations(req, res));
exports.default = router;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2ViLXNlYXJjaC1yb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvYXBpL3JvdXRlcy93ZWItc2VhcmNoLXJvdXRlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7O0dBRUc7Ozs7O0FBRUgsc0RBQThCO0FBQzlCLGdGQUEyRTtBQUMzRSx5REFBaUc7QUFDakcsNkNBQXNEO0FBRXRELGdCQUFnQjtBQUNoQixNQUFNLE1BQU0sR0FBRyxpQkFBTyxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBRWhDLHdCQUF3QjtBQUN4QixtR0FBbUc7QUFDbkcsTUFBTSxtQkFBbUIsR0FBRyxJQUFJLDJDQUFtQixDQUFDLHFCQUFxQixFQUFFO0lBQ3pFLFdBQVcsRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUscUJBQXFCLEVBQUUsTUFBTTtJQUN4RSxRQUFRLEVBQUUsZUFBZSxFQUFFLGFBQWEsRUFBRSxhQUFhO0NBQ3hELENBQUMsQ0FBQztBQUVILFNBQVM7QUFDVCxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSx1QkFBZ0IsRUFBRSxxQ0FBd0IsRUFBRSxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRSxDQUM5RSxtQkFBbUIsQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztBQUVsRCxNQUFNLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSx1QkFBZ0IsRUFBRSx3Q0FBMkIsRUFBRSxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRSxDQUNuRixtQkFBbUIsQ0FBQyxtQkFBbUIsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztBQUVyRCxNQUFNLENBQUMsSUFBSSxDQUFDLGdCQUFnQixFQUFFLHVCQUFnQixFQUFFLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxFQUFFLENBQzNELG1CQUFtQixDQUFDLFlBQVksQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztBQUU5QyxNQUFNLENBQUMsSUFBSSxDQUFDLGtCQUFrQixFQUFFLHVCQUFnQixFQUFFLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxFQUFFLENBQzdELG1CQUFtQixDQUFDLGNBQWMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztBQUVoRCxrQkFBZSxNQUFNLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFJvdXRlcyBmb3Igd2ViIHNlYXJjaCBhbmQgZGVlcCByZXNlYXJjaFxuICovXG5cbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHsgV2ViU2VhcmNoQ29udHJvbGxlciB9IGZyb20gJy4uL2NvbnRyb2xsZXJzL3dlYi1zZWFyY2gtY29udHJvbGxlcic7XG5pbXBvcnQgeyB2YWxpZGF0ZVdlYlNlYXJjaFJlcXVlc3QsIHZhbGlkYXRlRGVlcFJlc2VhcmNoUmVxdWVzdCB9IGZyb20gJy4uL21pZGRsZXdhcmUvdmFsaWRhdGlvbic7XG5pbXBvcnQgeyBhdXRoZW50aWNhdGVVc2VyIH0gZnJvbSAnLi4vbWlkZGxld2FyZS9hdXRoJztcblxuLy8gQ3JlYXRlIHJvdXRlclxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuLy8gSW5pdGlhbGl6ZSBjb250cm9sbGVyXG4vLyBJbiBhIHJlYWwgYXBwbGljYXRpb24sIHRoZSBBUEkga2V5IHdvdWxkIGJlIGxvYWRlZCBmcm9tIGVudmlyb25tZW50IHZhcmlhYmxlcyBvciBzZWNyZXRzIG1hbmFnZXJcbmNvbnN0IHdlYlNlYXJjaENvbnRyb2xsZXIgPSBuZXcgV2ViU2VhcmNoQ29udHJvbGxlcignYXBpLWtleS1wbGFjZWhvbGRlcicsIFtcbiAgJ0Jsb29tYmVyZycsICdSZXV0ZXJzJywgJ0ZpbmFuY2lhbCBUaW1lcycsICdXYWxsIFN0cmVldCBKb3VybmFsJywgJ0NOQkMnLFxuICAnRm9yYmVzJywgJ1RoZSBFY29ub21pc3QnLCAnTW9ybmluZ3N0YXInLCAnTWFya2V0V2F0Y2gnXG5dKTtcblxuLy8gUm91dGVzXG5yb3V0ZXIucG9zdCgnL3NlYXJjaCcsIGF1dGhlbnRpY2F0ZVVzZXIsIHZhbGlkYXRlV2ViU2VhcmNoUmVxdWVzdCwgKHJlcSwgcmVzKSA9PiBcbiAgd2ViU2VhcmNoQ29udHJvbGxlci5wZXJmb3JtV2ViU2VhcmNoKHJlcSwgcmVzKSk7XG5cbnJvdXRlci5wb3N0KCcvcmVzZWFyY2gnLCBhdXRoZW50aWNhdGVVc2VyLCB2YWxpZGF0ZURlZXBSZXNlYXJjaFJlcXVlc3QsIChyZXEsIHJlcykgPT4gXG4gIHdlYlNlYXJjaENvbnRyb2xsZXIucGVyZm9ybURlZXBSZXNlYXJjaChyZXEsIHJlcykpO1xuXG5yb3V0ZXIucG9zdCgnL3ZlcmlmeS1zb3VyY2UnLCBhdXRoZW50aWNhdGVVc2VyLCAocmVxLCByZXMpID0+IFxuICB3ZWJTZWFyY2hDb250cm9sbGVyLnZlcmlmeVNvdXJjZShyZXEsIHJlcykpO1xuXG5yb3V0ZXIucG9zdCgnL3RyYWNrLWNpdGF0aW9ucycsIGF1dGhlbnRpY2F0ZVVzZXIsIChyZXEsIHJlcykgPT4gXG4gIHdlYlNlYXJjaENvbnRyb2xsZXIudHJhY2tDaXRhdGlvbnMocmVxLCByZXMpKTtcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyOyJdfQ==